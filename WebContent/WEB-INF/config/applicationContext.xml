<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
           http://www.springframework.org/schema/jee
	  	   http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
    
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>WEB-INF/config/db.properties</value>
			</list>
		</property>
	</bean>
	<!--定义一些常量 -->
	
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- -->
	<context:annotation-config />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 通过注解，把URL映射到Controller上，该标签默认注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter --> 
	<mvc:annotation-driven/>
	<context:component-scan base-package="com.yinsin.simter" />
	
	<!-- 静态资源 -->
	<mvc:resources mapping="/lib/**" location="/lib/"/>
	<mvc:resources mapping="/other/**" location="/other/"/>
	<mvc:resources mapping="/apps/**" location="/apps/"/>
	<mvc:resources mapping="/common/**" location="/common/"/>
	<mvc:resources mapping="/images/**" location="/images/"/>
	<mvc:resources mapping="/loader.js" location="/"/>
	<mvc:resources mapping="/robots.txt" location="/"/>
	<mvc:resources mapping="/favicon.ico" location="/"/>
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->    
  	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="driverClassName" value="${druid.driverClassName}" />
        <property name="url" value="${druid.url}" />
        <property name="username" value="${druid.username}" />
        <property name="password" value="${druid.password}" />
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${druid.initialSize}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${druid.maxActive}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${druid.minIdle}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${druid.maxWait}" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="${druid.removeAbandoned}" />
        <!-- 超过时间限制多长； -->
        <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
        <!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
        <property name="validationQuery" value="${druid.validationQuery}" />
        <!-- 申请连接的时候检测 -->
        <property name="testWhileIdle" value="${druid.testWhileIdle}" />
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnBorrow" value="${druid.testOnBorrow}" />
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnReturn" value="${druid.testOnReturn}" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
            value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
        <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall -->
        <property name="filters" value="${druid.filters}" />
    </bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:sqlmapper/*/*.xml" />
		<property name="typeAliasesPackage" value="com.yinsin.simter.modal" />
		<property name="plugins">
	        <array>
	            <bean class="com.github.pagehelper.PageHelper">
			        <property name="properties">
			          <value>
						dialect=mysql
				        rowBoundsWithCount=true
				        pageSizeZero=true
				        reasonable=false
			          </value>
			        </property>
	            </bean>
	        </array>
	    </property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.yinsin.simter.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<bean class="com.yinsin.simter.frame.SpringContextHolder" lazy-init="false" />
	<bean id="appContext" class="com.yinsin.simter.frame.ApplicationContextUtil" />
	<bean id="beanPostCreate" class="com.yinsin.simter.frame.ApplicationContexerListner" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 设置上传文件最大值   512M=512*1024*1024(B)=1048576 bytes -->    
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
	    <property name="maxUploadSize" value="536870912" /> 
	    <property name="defaultEncoding" value="UTF-8" /> 
	</bean>  
	
</beans>